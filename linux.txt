# Get IP address
ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'

# View available disk space on current partition
df -h # human readable
df -k # aliens

# "Permissions XXXX for 'filename' are too open" error:
chmod 600 filename

# Run a Flask instance (or any command) in the background
# Logs output to &>here &
# Use &>/dev/null & to dump and not save
flask run &>flask.log &

# Get process id with grep and kill 
kill $(pgrep flask)

# Screen errors: Cannot make directory '/var/run/screen': Permission denied
sudo /etc/init.d/screen-cleanup start

# Find files and do something to them

## Clean up compiled bytecode of source files
# find . -type f -name '*.pyc' -delete
## OR
# rm code/*.pyc


# SSH
## New update requires copying .ssh keys folder to WSL and changing permissions
cp -r /mnt/c/Users/proj/.ssh ~
chmod 600 ~/.ssh/id_rsa_neu

# Zip and unzip a tar.gz dir
tar -zcvf file.tar.gz dir_to_be_zipped
tar -zxvf file.tar.gz -C extract_to_this_dir

# Recursively count files in a dir
find . -type f | wc -l

# Download a file (e.g. ipython/jupyter theme)
curl -O [url]
curl -O https://github.com/nsonnad/base16-ipython-notebook/tree/master/ipython-2/output/base16-monokai-light.css
or
curl -o [name] [url]

# Save and install crontabs
crontab -e # Open and edit
crontab -l > rontab # Save as
crontab rontab # Install

# Find .exe file by command, e.g. java
which java
/usr/bin/java

# Find actual location (bypass symlinks)
namei /usr/bin/java

# Screens
# Create a new terminal within your terminal that you can 
# abandon while it's running your scripts or interactive 
# processes while you go have a dump or a nap.
# E.g. : Create a new screen named foo
screen -S foo 
# Abandon and disown your screen when you're done
# Ctrl-A Ctrl-D
# Return to screen
screen -r foo

# Sym link from WSL to C:/
ln -s /mnt/c/Users/rer/proj proj
creates: proj -> /mnt/c/Users/rer/proj

# Sym link to windows dir
ln -s [create_link_to_here] [from_here]
ln -s C:/Users/rer/proj /home/rer/proj
cmd /c mklink /d C:\Users\rer\proj C:\Users\rer\ownCloud\proj

# Updates
sudo apt-get update

# Git
sudo apt-get install git

# config for latex
sudo apt-get install make
sudo apt-get install texlive-full
sudo apt-get install cm-super

# Start agent
eval `ssh-agent -s`
ssh-add /mnt/c/Users/rer/.ssh/id_rsa_neu

# Copy files to/from other servers
## From local to remote
$ rsync -azvP foobar.txt your_username@remotehost.edu:/some/remote/directory 
## From remote to local
$ rsync -azvP your_username@remotehost.edu:foobar.txt /some/local/directory 


# Vim'n around
h = left, j = down, k = up, l = right
i = toggle insert/change text mode
esc = exit insert mode

# in browse mode: type :[command]
 - :quit | to quit
 - :write | to save changes
 - :wq | to save and quit

# To save a directory to the PATH	
export PATH=$PATH:/mnt/c/Windows/System32

	